' Gambas class file

Public Sub Form_Resize()

    With pnlToolBar
        .W = Me.ClientW - MMain.MARGIN * 2
        .H = MMain.TLB_HEIGHT
        .Left = MMain.MARGIN
        .Top = 0
    End With

    With wksServers
        .W = Me.ClientW - MMain.MARGIN * 2
        .H = Me.ClientH - pnlToolBar.H - MMain.MARGIN
        .Left = MMain.MARGIN
        .Top = pnlToolBar.H
    End With

End

Public Sub Form_Open()

    Dim i As Integer
    Dim arrStatus As New String[]
    Dim arrName As New String[]
    Dim arrAddress As New String[]
    Dim arrPort As New String[]
    Dim objForm As FSessions

    arrStatus = Split(MMain.objSettings["Servers/Status"], ";")
    arrName = Split(MMain.objSettings["Servers/Name"], ";")
    arrAddress = Split(MMain.objSettings["Servers/Address"], ";")
    arrPort = Split(MMain.objSettings["Servers/Port"], ";")
    For i = 0 To arrAddress.Max
        If arrStatus[i] = "True" Then
            objForm = New FSessions(arrName[i], arrAddress[i], arrPort[i])
            wksServers.Add(objForm)
        Endif
    Next
    Select Case MMain.strCurrentUser
        Case "admin"
            If User.Id > 0 Then tlbSettings.Enabled = False
        Case "user"
            tlbReload.Enabled = False
            mnbRestart.Enabled = False
            mnbShutdown.Enabled = False
            tlbSettings.Enabled = False
            mnuTermAllSoft.Enabled = False
            mnuTermAllHard.Enabled = False
        Case "guest"
            mnbTerminate.Enabled = False
            tlbShaper.Enabled = False
            tlbReload.Enabled = False
            mnbRestart.Enabled = False
            mnbShutdown.Enabled = False
            tlbSettings.Enabled = False
            mnuTermAllSoft.Enabled = False
            mnuTermAllHard.Enabled = False
    End Select

End

Public Sub Form_Close()

    triMain.Delete()

End

Public Sub tlbServers_Click()

    FServers.ShowModal()

End

Public Sub tlbSettings_Click()

    FSettings.ShowModal()

End

Public Sub tlbUpdate_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        objWindow.grvSessions.Clear()
        objWindow.grvSessions.Rows.Count = 0
        objWindow.objServer.GetSessions()
    Endif

End

Public Sub tlbReload_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.Connected Then
            If MMain.ShowMessage(("Are you sure to reload config file?"), MMsgType.Question) = 1 Then
                objWindow.objServer.Reload()
            Endif
        Endif
    Endif

End

Public Sub tlbFilter_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.Connected Then
            FFilter.ShowModal()
        Endif
    Endif

End

Public Sub wksServers_Activate()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.MatchMode = MColumn.State Then
            tlbFilter.Picture = Picture["images/filteradd.png"]
        Else
            tlbFilter.Picture = Picture["images/filterdel.png"]
        Endif
    Endif

End

Public Sub tlbHelp_Click()

    If Exist(MMain.HELPFILE) Then
        FHelp.wwwHelp.Url = "file://" & Application.Path &/ MMain.HELPFILE
        FHelp.ShowModal()
    Else
        MMain.ShowMessage(("Help file was not found"), MMsgType.Err)
    Endif

End

Public Sub mnuTrayExit_Click()

    Me.Close()

End

Public Sub mnuTrayShow_Click()

    Me.Show()
    triMain.Hide()

End

Public Sub tlbTray_Click()

    Me.Hide()
    triMain.Show()

End

Public Sub triMain_Click()

    mnuTrayShow_Click()

End

Public Sub tlbExit_Click()

    Me.Close()

End

Public Sub mnuShutdownDefault_Click()

    MMain.ShutdownDaemon(MShutMode.Default)

End

Public Sub mnuShutdownSoft_Click()

    MMain.ShutdownDaemon(MShutMode.Soft)

End

Public Sub mnuShutdownHard_Click()

    MMain.ShutdownDaemon(MShutMode.Hard)

End

Public Sub mnuShutdownCancel_Click()

    MMain.ShutdownDaemon(MShutMode.Cancel)

End

Public Sub mnuTermCurrSoft_Click()

    MMain.TerminateSessions(MTermMode.Soft)

End

Public Sub mnuTermCurrHard_Click()

    MMain.TerminateSessions(MTermMode.Hard)

End

Public Sub mnuTermAllSoft_Click()

    MMain.TerminateSessions(MTermMode.Soft, True)

End

Public Sub mnuTermAllHard_Click()

    MMain.TerminateSessions(MTermMode.Hard, True)

End

Public Sub mnuRestartSoft_Click()

    MMain.RestartDaemon(MTermMode.Soft)

End

Public Sub mnuRestartHard_Click()

    MMain.RestartDaemon(MTermMode.Hard)

End

Public Sub tlbShaper_Click()

    Dim objWindow As FSessions
    Dim intInput As Integer
    Dim intOutput As Integer
    Dim intRow As Integer

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.Connected And If objWindow.objServer.Sessions.Count > 0 Then
            intRow = objWindow.grvSessions.Row
            intInput = CInt(objWindow.grvSessions[intRow, 4].Text)
            intOutput = CInt(objWindow.grvSessions[intRow, 5].Text)
            FShaper.vlbInput.Value = intInput
            FShaper.vlbOutput.Value = intOutput
            FShaper.ShowModal()
        Endif
    Endif

End
