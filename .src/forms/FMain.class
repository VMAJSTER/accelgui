' Gambas class file

Public Sub Form_Resize()

    With pnlTitle
        .W = Me.ClientW - MMain.MARGIN * 2
        .Left = MMain.MARGIN
        .Top = MMain.MARGIN
    End With

    With lblTitle
        .W = pnlTitle.W - pctClose.W - MMain.MARGIN * 2
        .Left = MMain.MARGIN
        .Top = MMain.MARGIN / 2
    End With

    With pctClose
        .Left = pnlTitle.W - .W
        .Top = 0
    End With

    With pnlToolBar
        .W = Me.ClientW - MMain.MARGIN * 2
        .H = MMain.TLB_HEIGHT
        .Left = MMain.MARGIN
        .Top = pnlTitle.H + MMain.MARGIN
    End With

    With wksServers
        .W = Me.ClientW - MMain.MARGIN * 2
        .H = Me.ClientH - pnlTitle.H - pnlToolBar.H - MMain.MARGIN * 2
        .Left = MMain.MARGIN
        .Top = pnlTitle.H + pnlToolBar.H + MMain.MARGIN
    End With

End

Public Sub tlbServers_Click()

    FServers.ShowModal()

End

Public Sub pctClose_MouseDown()

    FMain.Close()

End

Public Sub Form_Open()

    Dim i As Integer
    Dim arrStatus As New String[]
    Dim arrName As New String[]
    Dim arrAddress As New String[]
    Dim arrPort As New String[]
    Dim objForm As FSessions

    arrStatus = Split(MMain.objSettings["Servers/Status"], ";")
    arrName = Split(MMain.objSettings["Servers/Name"], ";")
    arrAddress = Split(MMain.objSettings["Servers/Address"], ";")
    arrPort = Split(MMain.objSettings["Servers/Port"], ";")
    For i = 0 To arrAddress.Max
        If arrStatus[i] = "True" Then
            objForm = New FSessions(arrName[i], arrAddress[i], arrPort[i])
            wksServers.Add(objForm)
        Endif
    Next
    Select Case MMain.strCurrentUser
        Case "admin"
            If User.Id > 0 Then
                tlbSettings.Enabled = False
            Endif
        Case "user"
            tlbReload.Enabled = False
            tlbShutdown.Enabled = False
            tlbSettings.Enabled = False
        Case "guest"
            tlbReload.Enabled = False
            tlbShutdown.Enabled = False
            tlbSettings.Enabled = False
            tlbKillOne.Enabled = False
    End Select

End

Public Sub tlbUpdate_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        objWindow.grvSessions.Clear()
        objWindow.grvSessions.Rows.Count = 0
        objWindow.objServer.GetSessions()
    Endif

End

Public Sub tlbSettings_Click()

    FSettings.ShowModal()

End

Public Sub tlbReload_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.Connected Then
            Message.Title = ("Config reload")
            If Message.Question(("Are you sure to reload config file?"), ("Yes"), ("No")) = 1 Then
                objWindow.objServer.Reload()
            Endif
        Endif
    Endif

End

Public Sub tlbShutdown_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.Connected Then
            FShutdown.ShowModal()
        Endif
    Endif

End

Public Sub tlbFilter_Click()

    Dim objWindow As FSessions

    If wksServers.Windows.Count > 0 Then
        objWindow = wksServers.ActiveWindow
        If objWindow.objServer.Connected Then
            FFilter.ShowModal()
        Endif
    Endif

End

Public Sub wksServers_Activate()

    Dim objWindow As FSessions

    objWindow = FMain.wksServers.ActiveWindow
    If objWindow.objServer.MatchMode = MColumn.State Then
        FMain.tlbFilter.Picture = Picture["images/filteradd.png"]
    Else
        FMain.tlbFilter.Picture = Picture["images/filterdel.png"]
    Endif

End
