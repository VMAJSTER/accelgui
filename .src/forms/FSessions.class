' Gambas class file

Public objServer As CNas

Private intX As Integer
Private intY As Integer

Private bytColSort As Byte = 1

Public Sub _new(Name As String, Host As String, Port As Integer)

    Dim i As Integer

    With grvSessions
        .Columns.Count = 10
        .Columns[0].Text = ("Interface")
        .Columns[0].Width = 100
        .Columns[1].Text = ("Username")
        .Columns[2].Text = ("CallingSID")
        .Columns[2].Width = 135
        .Columns[3].Text = ("IP")
        .Columns[3].Width = 135
        .Columns[4].Text = ("RateIn")
        .Columns[4].Width = 85
        .Columns[5].Text = ("RateOut")
        .Columns[5].Width = 85
        .Columns[6].Text = ("Type")
        .Columns[6].Width = 60
        .Columns[7].Text = ("Compress")
        .Columns[7].Width = 60
        .Columns[8].Text = ("State")
        .Columns[8].Width = 85
        .Columns[9].Text = ("Uptime")
        .Columns[9].Width = 110
        For i = 0 To 9
            .Columns[i].Alignment = Align.Center
        Next
        .Columns.Sort = bytColSort
    End With

    objServer = New CNas As "objServer"
    With objServer
        .Name = Name
        .Host = Host
        .Port = Port
        .Connect()
    End With

    Me.Text = Name

End

Public Sub Form_Resize()

    With grvSessions
        .Width = Me.ClientW - MMain.MARGIN * 2
        .Height = Me.ClientH - MMain.MARGIN * 2
        .Left = MMain.MARGIN
        .Top = MMain.MARGIN
        .Columns[1].Width = grvSessions.ClientW - 855
    End With

    With pnlToolBar
        .Left = (Me.ClientW - .W) / 2
        .Top = Me.ClientH - .H - MMain.MARGIN * 2
    End With

End

Private Sub FillSessions()

    Dim i As Integer

    If objServer.Sessions.Count > 0 Then
        grvSessions.Clear()
        grvSessions.Rows.Count = 0
        For i = 0 To objServer.Sessions.Max
            Inc grvSessions.Rows.Count
            grvSessions[i, 0].Text = objServer.Sessions[i].IFName
            grvSessions[i, 1].Text = objServer.Sessions[i].UserName
            grvSessions[i, 2].Text = objServer.Sessions[i].CallingSID
            grvSessions[i, 3].Text = objServer.Sessions[i].IP
            grvSessions[i, 4].Text = objServer.Sessions[i].RateIn
            grvSessions[i, 5].Text = objServer.Sessions[i].RateOut
            grvSessions[i, 6].Text = objServer.Sessions[i].Type
            grvSessions[i, 7].Text = objServer.Sessions[i].Comp
            grvSessions[i, 8].Text = objServer.Sessions[i].State
            grvSessions[i, 9].Text = objServer.Sessions[i].Uptime
        Next
        grvSessions.Columns[1].Width = grvSessions.ClientW - 855
    Endif

End

Public Sub Form_Close()

    objServer.Disconnect()

End

Public Sub objServer_Connected()

    objServer.GetSessions()

End

Public Sub objServer_GotSessions()

    FillSessions()
    If grvSessions.Rows.Count > 0 Then
        MMain.ActivateRow(grvSessions, 0)
    Endif

End

Public Sub objServer_Killed()

    grvSessions.Clear()
    grvSessions.Rows.Count = 0
    objServer.GetSessions()

End


Public Sub grvSessions_MouseMove()

    Dim X, Y As Integer
    Dim bolCondition As Boolean

    X = Mouse.X
    Y = Mouse.Y
    bolCondition = (X >= pnlToolBar.Left)
    bolCondition = (Y >= pnlToolBar.Top) And bolCondition
    bolCondition = (X <= pnlToolBar.Left + pnlToolBar.W) And bolCondition
    bolCondition = (Y <= pnlToolBar.Top + pnlToolBar.H) And bolCondition
    If bolCondition Then
        pnlToolBar.Show()
    Else
        pnlToolBar.Hide()
    Endif

End

Public Sub tlbFirst_Click()

    If grvSessions.Rows.Count > 0 Then
        MMain.ActivateRow(grvSessions, 0)
        ShowRowNum(1)
    Endif

End

Public Sub tlbPrevious_Click()

    If grvSessions.Row > 0 Then
        MMain.ActivateRow(grvSessions, grvSessions.Row - 1)
        ShowRowNum(grvSessions.Row + 1)
    Endif

End

Public Sub tlbNext_Click()

    If grvSessions.Row < grvSessions.Rows.Max Then
        MMain.ActivateRow(grvSessions, grvSessions.Row + 1)
        ShowRowNum(grvSessions.Row + 1)
    Endif

End

Public Sub tlbLast_Click()

    If grvSessions.Rows.Count > 0 Then
        MMain.ActivateRow(grvSessions, grvSessions.Rows.Max)
        ShowRowNum(grvSessions.Rows.Count)
    Endif

End

Public Sub grvSessions_Select()

    If grvSessions.Row > -1 Then
        ShowRowNum(grvSessions.Row + 1)
    Endif

End

Private Sub ShowRowNum(intCur As Integer)

    lblSessions.Text = CStr(intCur) & " / " & CStr(grvSessions.Rows.Count)

End

Public Sub tmrState_Timer()

    If objServer.Connected Then
        Me.Icon = Picture["./images/active.png"]
        If tmrServer.Enabled = True Then
            tmrServer.Stop()
        Endif
    Else
        Me.Icon = Picture["./images/passive.png"]
        grvSessions.Clear()
        grvSessions.Rows.Count = 0
        If tmrServer.Enabled = False Then
            tmrServer.Start()
        Endif
    Endif

End

Public Sub tmrServer_Timer()

    If Not objServer.Connected Then
        objServer.Connect()
    Endif

End

Public Sub grvSessions_Sort()

    If grvSessions.Columns.Sort <> bytColSort Then
        Select Case grvSessions.Columns.Sort
            Case 0
                objServer.OrderMode = MColumn.IFName
            Case 1
                objServer.OrderMode = MColumn.UserName
            Case 2
                objServer.OrderMode = MColumn.CallingSID
            Case 3
                objServer.OrderMode = MColumn.IP
            Case 6
                objServer.OrderMode = MColumn.Type
            Case 8
                objServer.OrderMode = MColumn.State
            Case 9
                objServer.OrderMode = MColumn.UpTime
        End Select
        bytColSort = grvSessions.Columns.Sort
        FMain.tlbUpdate_click()
    Endif

End
