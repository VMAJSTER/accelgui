' Gambas class file

Public objServer As CNas
Public objStats As CStat
' Column number to sort by
Private bytColSort As Byte = 1
' Width of all columns in grid except for username column
Private Const COLUMNS_W As Short = 775

Private Sub ShowRowNum(intCur As Integer)

    lblSessions.Text = CStr(intCur) & " / " & CStr(grvSessions.Rows.Count)

End

Public Sub _new(Name As String, Host As String, Port As Integer)

    Dim i As Integer

    With grvSessions
        .Columns.Count = 9
        .Columns[0].Text = ("Interface")
        .Columns[0].Width = 100
        .Columns[1].Text = ("Username")
        .Columns[2].Text = ("CallingSID")
        .Columns[2].Width = 135
        .Columns[3].Text = ("IP address")
        .Columns[3].Width = 135
        .Columns[4].Text = ("RateIn")
        .Columns[4].Width = 85
        .Columns[5].Text = ("RateOut")
        .Columns[5].Width = 85
        .Columns[6].Text = ("Type")
        .Columns[6].Width = 60
        .Columns[7].Text = ("State")
        .Columns[7].Width = 75
        .Columns[8].Text = ("Uptime")
        .Columns[8].Width = 100
        For i = 0 To 8
            .Columns[i].Alignment = Align.Center
        Next
        .Columns.Sort = bytColSort
    End With

    objServer = New CNas As "objServer"
    With objServer
        .Name = Name
        .Host = Host
        .Port = Port
        .Connect()
    End With
    objStats = New CStat As "objStats"
    With objStats
        .Name = Name
        .Host = Host
        .Port = Port
        .Connect()
    End With

    Me.Text = Name

End

Public Sub Form_Resize()

    With grvSessions
        .W = Me.ClientW - pnlStat.W - MMain.MARGIN * 3
        .H = Me.ClientH - MMain.MARGIN * 2
        .Left = MMain.MARGIN
        .Top = MMain.MARGIN
        .Columns[1].W = grvSessions.ClientW - COLUMNS_W
    End With

    With pnlStat
        .H = grvSessions.H - pnlToolBar.H - pnlButtons.H - MMain.MARGIN * 2
        .Top = grvSessions.Top
        .Left = grvSessions.W + MMain.MARGIN * 2
    End With

    With txaStat
        .H = pnlStat.H - MMain.MARGIN * 4
        .W = pnlStat.W - MMain.MARGIN * 4
        .Left = MMain.MARGIN * 2
        .Top = MMain.MARGIN * 2
    End With

    With lblLabel
        .W = txaStat.W
        .Left = txaStat.Left
        .Top = (txaStat.H - lblLabel.H) / 2 + txaStat.Top
    End With

    With pnlButtons
        .Left = pnlStat.Left
        .Top = pnlStat.H + MMain.MARGIN * 2
    End With

    With pnlToolBar
        .Left = pnlStat.Left
        .Top = pnlStat.H + pnlButtons.H + MMain.MARGIN * 3
    End With

End

Public Sub Form_Close()

    objServer.Disconnect()
    objStats.Disconnect()

End

Public Sub objServer_Connected()

    objServer.GetSessions()

End

Public Sub objStats_Connected()

    objStats.GetStats()

End

Public Sub objServer_GotSessions()

    grvSessions.Rows.Count = objServer.Sessions.Count
    If grvSessions.Rows.Count > 0 Then
        MMain.ActivateRow(grvSessions, 0)
        grvSessions.Columns[1].Width = grvSessions.ClientW - COLUMNS_W
    Endif

End

Public Sub objStats_GotStats()

    txaStat.Clear()
    txaStat.Insert(objStats.Stats)

End


Public Sub objServer_Killed()

    grvSessions.Clear()
    grvSessions.Rows.Count = 0
    objServer.GetSessions()

End

Public Sub tlbFirst_Click()

    If grvSessions.Rows.Count > 0 Then
        MMain.ActivateRow(grvSessions, 0)
        ShowRowNum(1)
    Endif

End

Public Sub tlbPrevious_Click()

    If grvSessions.Row > 0 Then
        MMain.ActivateRow(grvSessions, grvSessions.Row - 1)
        ShowRowNum(grvSessions.Row + 1)
    Endif

End

Public Sub tlbNext_Click()

    If grvSessions.Row < grvSessions.Rows.Max Then
        MMain.ActivateRow(grvSessions, grvSessions.Row + 1)
        ShowRowNum(grvSessions.Row + 1)
    Endif

End

Public Sub tlbLast_Click()

    If grvSessions.Rows.Count > 0 Then
        MMain.ActivateRow(grvSessions, grvSessions.Rows.Max)
        ShowRowNum(grvSessions.Rows.Count)
    Endif

End

Public Sub grvSessions_Select()

    If grvSessions.Row > -1 Then
        ShowRowNum(grvSessions.Row + 1)
    Endif

End

Public Sub tmrState_Timer()

    If objServer.Connected Then
        Me.Icon = Picture["./images/active.png"]
        ShowRowNum(grvSessions.Row + 1)
    Else
        Me.Icon = Picture["./images/passive.png"]
        grvSessions.Clear()
        grvSessions.Rows.Count = 0
        txaStat.Clear()
        ShowRowNum(0)
        objServer.Connect()
        objStats.Connect()
    Endif

End

Public Sub grvSessions_Sort()

    If grvSessions.Columns.Sort <> bytColSort Then
        Select Case grvSessions.Columns.Sort
            Case 0
                objServer.OrderMode = MColumn.IFName
            Case 1
                objServer.OrderMode = MColumn.UserName
            Case 2
                objServer.OrderMode = MColumn.CallingSID
            Case 3
                objServer.OrderMode = MColumn.IP
            Case 6
                objServer.OrderMode = MColumn.Type
            Case 8
                objServer.OrderMode = MColumn.State
            Case 9
                objServer.OrderMode = MColumn.UpTime
        End Select
        bytColSort = grvSessions.Columns.Sort
        FMain.tlbUpdate_click()
    Endif

End

Public Sub grvSessions_Data(Row As Integer, Column As Integer)

    Select Case Column
        Case 0
            grvSessions.Data.Text = objServer.Sessions[Row].IFName
        Case 1
            grvSessions.Data.Text = objServer.Sessions[Row].UserName
        Case 2
            grvSessions.Data.Text = objServer.Sessions[Row].CallingSID
        Case 3
            grvSessions.Data.Text = objServer.Sessions[Row].IP
        Case 4
            grvSessions.Data.Text = objServer.Sessions[Row].RateIn
        Case 5
            grvSessions.Data.Text = objServer.Sessions[Row].RateOut
        Case 6
            grvSessions.Data.Text = objServer.Sessions[Row].Type
        Case 7
            grvSessions.Data.Text = objServer.Sessions[Row].State
        Case 8
            grvSessions.Data.Text = objServer.Sessions[Row].Uptime
    End Select

End

Public Sub tmrStat_Timer()

    objStats.GetStats()
    lblLabel.Visible = (txaStat.Text = "")

End

Public Sub swbAutoUpdate_Click()

    If swbAutoUpdate.Value Then
        tmrStat.Start()
        btnUpdate.Enabled = False
    Else
        tmrStat.Stop()
        btnUpdate.Enabled = True
    Endif

End

Public Sub btnUpdate_Click()

    tmrStat_Timer()

End
